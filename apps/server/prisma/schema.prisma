generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  fullName  String
  username  String     @unique(map: "USERNAME_IDX")
  email     String     @unique(map: "EMAIL_IDX")
  password  String
  avatar    String?
  blogs     Blog[]
  comments  Comment[]
  likes     Like[]
  Bookmark  Bookmark[]
  createdAt DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt DateTime   @updatedAt() @db.Timestamptz(6)

  @@map("users")
}

model Blog {
  id          Int        @id @default(autoincrement())
  slug        String     @unique(map: "SLUG_IDX")
  title       String     @unique(map: "TITLE_IDX")
  description String
  content     String
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  comments    Comment[]
  likes       Like[]
  bookmark    Bookmark[]
  createdAt   DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime   @updatedAt() @db.Timestamptz(6)

  @@map("blogs")
}

model Comment {
  id              Int       @id @default(autoincrement())
  content         String
  blogId          Int
  userId          Int
  parentCommentId Int?
  user            User      @relation(fields: [userId], references: [id])
  blog            Blog      @relation(fields: [blogId], references: [id])
  likes           Like[]
  parentComment   Comment?  @relation(name: "ParentChildrenComments", fields: [parentCommentId], references: [id])
  childComments   Comment[] @relation(name: "ParentChildrenComments")
  createdAt       DateTime  @default(now()) @db.Timestamptz(6)

  @@map("comments")
}

model Like {
  id        Int      @id @default(autoincrement())
  blogId    Int
  commentId Int?
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  blog      Blog     @relation(fields: [blogId], references: [id])
  Comment   Comment? @relation(fields: [commentId], references: [id])
  createdAt DateTime @default(now()) @db.Timestamptz(6)

  @@map("likes")
}

model Bookmark {
  id        Int      @id @default(autoincrement())
  userId    Int
  blogId    Int
  user      User     @relation(fields: [userId], references: [id])
  blog      Blog     @relation(fields: [blogId], references: [id])
  createdAt DateTime @default(now()) @db.Timestamptz(6)

  @@map("bookmarks")
}
